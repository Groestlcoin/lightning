---
name: CI MacOS
on: [push, pull_request]
jobs:
  smoke-test:
    name: Build on macOS
    runs-on: macos-latest
    env:
      DEVELOPER: 1
      VALGRIND: 0
      EXPERIMENTAL_FEATURES: 0
      COMPAT: 1
    strategy:
      fail-fast: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0

      - name: Install dependencies
        run: |
          export PATH="/usr/local/opt:/Users/runner/.local/bin:/Users/runner/Library/Python/3.10/bin:$PATH"
          export GROESTLCOIN_VERSION=2.20.1
          brew install wget python autoconf automake libtool python3 gmp gnu-sed gettext libsodium

          (
            cd /tmp/
            wget https://github.com/Groestlcoin/groestlcoin/releases/download/v2.20.1/groestlcoin-2.20.1-osx64.tar.gz -O groestlcoin.tar.gz
            tar -xvzf groestlcoin.tar.gz
            sudo mv groestlcoin-$GROESTLCOIN_VERSION/bin/* /usr/local/bin
          )

          pip3 install --user poetry
          poetry config virtualenvs.create false --local
          poetry install

          ln -s /usr/local/Cellar/gettext/0.20.1/bin/xgettext /usr/local/opt
          export PATH="/usr/local/opt:$PATH"

      - name: Build
        env:
          VALGRIND: ${{ matrix.VALGRIND }}
          DEVELOPER: ${{ matrix.DEVELOPER }}
          EXPERIMENTAL_FEATURES: ${{ matrix.EXPERIMENTAL_FEATURES }}
          COMPILER: ${{ matrix.COMPILER }}
          COMPAT: ${{ matrix.COMPAT }}
          NO_PYTHON: ${{ matrix.NO_PYTHON }}
          COPTFLAGS: ${{ matrix.COPTFLAGS }}
          NETWORK: ${{ matrix.NETWORK }}
          TEST_CMD: ${{ matrix.TEST_CMD }}
          TEST_GROUP_COUNT: ${{ matrix.TEST_GROUP_COUNT }}
          TEST_GROUP: ${{ matrix.TEST_GROUP }}
        run: |
          export PATH="/usr/local/opt:/Users/runner/.local/bin:/Users/runner/Library/Python/3.10/bin:$PATH"
          export LDFLAGS="-L/usr/local/opt/sqlite/lib"
          export CPPFLAGS="-I/usr/local/opt/sqlite/include"
          export CFLAGS="-Wno-error -Wno-nullability-completeness -Wno-expansion-to-defined -Wno-builtin-requires-header"
          export CXXFLAGS="-Wno-error -Wno-nullability-completeness -Wno-expansion-to-defined -Wno-builtin-requires-header"

          ./configure
          make

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: clightning-${{ github.sha }}-macos
          path: |
            lightningd/lightningd
            cli/lightning-cli
          if-no-files-found: error
          retention-days: 7

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: clightning-${{ github.sha }}-macos
